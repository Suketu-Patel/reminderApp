{"version":3,"sources":["utils/dateFormatter.js","components/ReminderForm.js","components/ReminderFooter.js","components/ReminderList.js","components/ReminderEdit.js","components/App.js","index.js"],"names":["dateFormat","fullDate","choice","toString","split","dateMap","day","month","date","year","time","timezone","standard","choiceArray","result","i","push","join","ReminderForm","store","useContext","StoreContext","useState","reminder","setReminder","Date","setDate","onSubmit","e","preventDefault","addReminder","title","dateCreated","expirationDate","type","value","className","onChange","target","required","placeholder","newDate","ReminderFooter","count","useObserver","reminderCount","RemidnerList","reminderList","reminders","map","id","key","to","withRouter","props","reminderId","useParams","onEditChange","deleteReminder","splice","history","onClick","App","path","exact","React","createContext","ReactDOM","render","children","useLocalStore","length","editReminder","prompt","Provider","document","querySelector"],"mappings":"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","file":"static/js/main.c60ba1ad.chunk.js","sourcesContent":["export const dateFormat = (fullDate, choice) => {\n    const [day, month, date, year, time, timezone, ...standard] = fullDate.toString().split(\" \");\n    const dateMap = {\n        day, month, date, year, time, timezone, standard\n    }\n    let choiceArray = choice.split(\" \");\n    let result = []\n    for(let i in choiceArray){\n        result.push(dateMap[choiceArray[i]])\n    }\n    return result.join(\" \")\n}","import React, { useContext, useState } from 'react';\nimport { StoreContext } from '../index'\nimport DateTimePicker from 'react-datetime-picker';\nimport {dateFormat} from \"../utils/dateFormatter\"\n\nconst ReminderForm = () => {\n    const store = useContext(StoreContext);\n    const [reminder,setReminder] = useState(\"\")\n    const [date,setDate] = useState(new Date())\n\n    const addReminder = e =>{\n        e.preventDefault();\n        store.addReminder(\n            {title:reminder,dateCreated:new Date(),expirationDate:dateFormat(date,\"date month time\")}\n        )\n        setReminder(\"\")\n    }\n\n    const changeHandler = e =>{\n        setReminder(e.target.value);\n    }\n\n    const changeDate = (newDate) => {\n        setDate(newDate)\n    }\n    \n    return(\n        <form onSubmit={addReminder}>\n            <input type=\"text\" \n            value={reminder} \n            className = \"form-control mb-3 mt-2\"\n            onChange={changeHandler}\n            required\n            placeholder=\"Press 'Enter' To add Reminder\"\n            />\n            <label className=\"mr-3\">Reminder Time:</label>\n            <DateTimePicker\n                onChange={changeDate}\n                value={date}\n            />\n            <br/>\n            <input \n                className=\"mt-3 mb-5 btn btn-primary form-control\"\n                type=\"submit\"\n            />\n        </form>\n    )\n}\nexport default ReminderForm;","import React, { useContext } from \"react\"\nimport { StoreContext } from '../index'\nimport { useObserver } from \"mobx-react\";\n\nconst ReminderFooter = () => {\n    const store = useContext(StoreContext);\n    const count = useObserver(()=>store.reminderCount)\n    return(\n        <div>\n            <h4>Number of reminders: {count}</h4>\n        </div>\n    )\n}\nexport default ReminderFooter;","import React, { useContext } from 'react';\nimport { StoreContext } from '..';\nimport { useObserver } from 'mobx-react'\nimport { Link } from 'react-router-dom';\nimport {dateFormat} from \"../utils/dateFormatter\"\nconst RemidnerList = () => {\n\n    const store = useContext(StoreContext)\n    const reminderList = useObserver(() =>\n        store.reminders.map((reminder, id) => {\n            return (\n                <div key={id} className=\"list-group\">\n                    <Link to={`/edit/${id}`} \n                        className=\"list-group-item list-group-item-action flex-column align-items-start\">\n                        <div className=\"d-flex w-100 justify-content-between\">\n                            <h5 className=\"mb-1\">{reminder.title}</h5>\n                            <small>{dateFormat(reminder.dateCreated,\"day date\")}</small>\n                            <small>Expiration-{reminder.expirationDate}</small>\n                        </div>\n                    </Link>\n                </div>\n            )\n        })\n    )\n    return (\n        <div>\n            {reminderList}\n        </div>\n    )\n}\n\nexport default RemidnerList;","import React, { useContext } from 'react';\nimport { useParams, withRouter } from 'react-router-dom';\nimport { StoreContext } from '..';\nimport { useObserver } from 'mobx-react';\n\nconst ReminderEdit = (props) => {\n    let { reminderId } = useParams();\n    const store = useContext(StoreContext)\n\n    const onEditChange = (e) => {\n        store.reminders[reminderId].title = e.target.value;\n    }\n\n    const deleteReminder = () => {\n        store.reminders.splice(reminderId, 1)\n        props.history.push(\"/reminderApp\")\n    }\n\n    return (\n        <div>\n            {\n                useObserver(() => {\n                    return (\n                        <div className=\"container\">\n                            <form onSubmit={(e) => {\n                                e.preventDefault();\n                                return props.history.push(\"/reminderApp\")\n                            }\n                            }>\n                                <div className=\"form-group mt-3\">\n                                    <h3>Edit reminder</h3>\n                                    <label>Title</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        value={store.reminders[reminderId].title}\n                                        onChange={onEditChange}\n                                        required\n                                    />\n                                    <input\n                                        className=\"mt-2 btn btn-primary form-control\"\n                                        type=\"submit\"\n                                        value=\"Done\"\n                                    />\n                                </div>\n                            </form>\n                            <button\n                                className=\"btn btn-danger form-control\"\n                                onClick={deleteReminder}\n                            >\n                                Delete\n                            </button>\n                        </div>\n                    )\n                })\n            }\n\n        </div>\n    )\n}\nexport default withRouter(ReminderEdit);","import React from 'react';\nimport ReminderForm from './ReminderForm';\nimport ReminderFooter from './ReminderFooter';\nimport RemidnerList from './ReminderList';\nimport { Switch,Route } from 'react-router-dom';\nimport ReminderEdit from './ReminderEdit';\n\nconst App = () => {\n    return (\n        <div className=\"container\">\n            <Switch>\n                <Route path=\"/reminderApp\" exact>\n                    <ReminderForm />\n                    <RemidnerList />\n                    <ReminderFooter />\n                </Route>\n                <Route path=\"reminderApp/edit/:reminderId\">\n                    <ReminderEdit/>\n                </Route>\n            </Switch>\n\n        </div>\n    );\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport { useLocalStore } from 'mobx-react';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { dateFormat } from './utils/dateFormatter';\n\nexport const StoreContext = React.createContext();\n\nconst StoreProvider = ({ children }) => {\n    const store = useLocalStore(() => ({\n        reminders: [\n            {\n                title:\"Buy Groceries\",\n                dateCreated: new Date(),\n                expirationDate: dateFormat(new Date(),\"date month time\")\n            }\n        ],\n        addReminder: reminder => {\n            store.reminders.push(reminder);\n        },\n        get reminderCount() {\n            return store.reminders.length\n        },\n        editReminder : (id) => {\n            store.reminders[id].title = prompt(\"type to edit\")\n        },\n    }));\n    return <StoreContext.Provider value={store}> {children} </StoreContext.Provider>\n}\n\nReactDOM.render(\n    <Router>\n        <StoreProvider>\n            <App />\n        </StoreProvider>\n    </Router>\n    ,\n    document.querySelector(\"#root\")\n);"],"sourceRoot":""}